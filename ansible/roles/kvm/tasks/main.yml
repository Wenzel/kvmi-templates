- name: update the APT cache
  apt:
    update_cache: yes
  
- name: get the kernel release string
  shell: uname -r
  register: guest_uname
  become: false
  
- name: install kernel build dependencies
  apt:
    name: linux-image-{{ guest_uname.stdout }}
    state: build-dep

- name: install extra dependencies
  apt:
    name:
      - libncurses-dev
      - flex
      - bison
      - openssl
      - libssl-dev
      - dkms
      - libelf-dev
      - libudev-dev
      - libpci-dev
      - libiberty-dev
      - autoconf
    state: present

# TODO: this should be done as user
- name: fetch the Linux kernel with the KVMI patches
  git:
    repo: https://github.com/KVM-VMI/kvm.git
    dest: /usr/src/kvmi
    version: kvmi-v7
      
- name: build and install the KVMI enabled kernel
  shell: |
    yes "" | make oldconfig
    scripts/config --enable KVM_INTROSPECTION
    scripts/config --enable KVM_INTROSPECTION_GUEST
    scripts/config --enable REMOTE_MAPPING
    scripts/config --disable CONFIG_KSM
    scripts/config --disable TRANSPARENT_HUGEPAGE
    make -j`nproc`
    make modules_install
    make install
    update-grub
    make clean
    make prepare
  args:
    chdir: /usr/src/kvmi
  environment:
    INSTALL_MOD_STRIP: 1

- name: vhost-vsock config for modules-load
  copy:
    dest: /etc/modules-load.d/vhost-vsock.conf
    content: vhost-vsock

- name: vhost-vsock udev rule
  copy:
    dest: /etc/udev/rules.d/10-vhost-vsock.rules
    content: KERNEL=="vhost-vsock", GROUP="kvm", MODE="0660"

- name: update all initramfs images
  shell: update-initramfs -k all -u
    
- name: reboot into the new kernel
  reboot:
    reboot_timeout: 300

- name: get the kernel release string
  shell: uname -r
  register: uname
  become: false

- name: displaying kernel version
  debug:
    var: uname.stdout